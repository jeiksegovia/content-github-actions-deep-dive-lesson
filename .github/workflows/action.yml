name: Deploy my Lambda

on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: check out code
        uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install libraries
        run: |
             cd function
             pip install flake8
      - name: Lint with flake8
        run: |
          echo "starting linting"
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: check out code
        uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install libraries
        run: |
             cd function
             python -m pip install --upgrade pip
             if [ -f requirements.txt ]; then pip install -r requirements.txt -t .; fi
      - name: Create zip bundle
        run: |
            cd function
            zip -r ../${{ github.sha }}.zip .
      - name: Archieve artifact
        uses: actions/upload-artifact@v2
        with:
          name: zipped-bundle
          path: ${{ github.sha }}.zip

  publish:
    runs-on: ubuntu-latest
    needs: build 
    steps:
      - name: Create relase
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release from ${{ github.run_number }}
          body: New release for ${{ github.sha }}. Release notes on doc.
          draft: false
          prerelease: false
      - name: zipped-bundle
        uses: actions/download-artifact@v2
        with:
          name: zipped-bundle
      - name: upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./${{ github.sha }}.zip
          asset_name: source_code_with_libraries.zip
          asset_content_type: application/zip
  
  upload:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Donwload artifact
        uses: actions/download-artifact@v2
        with:
          name: zipped-bundle
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACESS_KEY }}
          aws-region: us-east-1
      - name: upload to s3
        run: |
          echo "${{ github.ref }}"
          aws s3 cp ${{ github.sha }}.zip s3://jk-github-action-test/

  deploy:
    runs-on: ubuntu-latest
    needs: upload
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACESS_KEY }}
          aws-region: us-east-1
      - name: Update function code
        run: |
          echo "${{ github.ref }}"
          aws lambda update-function-code \
            --function-name jk_github_action_manual_lambda_test_1 \
            --s3-bucket jk-github-action-test \
            --s3-key ${{ github.sha }}.zip \
            --publish
